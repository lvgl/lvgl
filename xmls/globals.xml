<api>
    <enumdef name="lv_state" help="Widget states">
        <enum name="default" help="Normal state"/>
        <enum name="pressed" help="Being pressed"/>
        <enum name="checked" help="Toggled or checked"/>
        <enum name="hovered" help="Pointer over widget"/>
        <enum name="scrolled" help="Being scrolled"/>
        <enum name="disabled" help="Disabled, no interaction"/>
        <enum name="focused" help="Has input focus"/>
        <enum name="focus_key" help="Focused by keyboard"/>
        <enum name="edited" help="Being edited"/>
        <enum name="user_1" help="User state 1"/>
        <enum name="user_2" help="User state 2"/>
        <enum name="user_3" help="User state 3"/>
        <enum name="user_4" help="User state 4"/>
    </enumdef>

    <enumdef name="lv_part" help="Widget parts">
        <enum name="main" help="Main body"/>
        <enum name="scrollbar" help="Scrollbar"/>
        <enum name="indicator" help="Indicator (e.g. bar fill)"/>
        <enum name="knob" help="Knob or handle"/>
        <enum name="selected" help="Selected item or region"/>
        <enum name="cursor" help="Cursor (e.g. in text area)"/>
        <enum name="items" help="Items (e.g. chart series or table cells)"/>
    </enumdef>

    <enumdef name="lv_event" help="Widget events">
        <enum name="all" help="Match all events"/>

        <!-- Input device -->
        <enum name="pressed" help="Pressed"/>
        <enum name="pressing" help="Being pressed"/>
        <enum name="press_lost" help="Press lost (pointer moved)"/>
        <enum name="short_clicked" help="Short click + release"/>
        <enum name="single_clicked" help="First short click"/>
        <enum name="double_clicked" help="Second short click"/>
        <enum name="triple_clicked" help="Third short click"/>
        <enum name="long_pressed" help="Long pressed"/>
        <enum name="long_pressed_repeat" help="Repeat while long pressed"/>
        <enum name="clicked" help="Released without scroll"/>
        <enum name="released" help="Released in all cases"/>
        <enum name="scroll_begin" help="Scroll begins"/>
        <enum name="scroll_throw_begin" help="Scroll continues after throw"/>
        <enum name="scroll_end" help="Scroll ends"/>
        <enum name="scroll" help="Scrolling"/>
        <enum name="gesture" help="Gesture detected"/>
        <enum name="key" help="Key sent to widget"/>
        <enum name="rotary" help="Rotary encoder turned"/>
        <enum name="focused" help="Got focus"/>
        <enum name="defocused" help="Lost focus"/>
        <enum name="leave" help="Focus/pointer left"/>
        <enum name="hit_test" help="Hit testing"/>
        <enum name="indev_reset" help="Input device reset"/>
        <enum name="hover_over" help="Pointer hovers"/>
        <enum name="hover_leave" help="Pointer stops hovering"/>

        <!-- Drawing -->
        <enum name="cover_check" help="Check full cover"/>
        <enum name="refr_ext_draw_size" help="Get extra draw size"/>
        <enum name="draw_main_begin" help="Start main draw"/>
        <enum name="draw_main" help="Main draw"/>
        <enum name="draw_main_end" help="End main draw"/>
        <enum name="draw_post_begin" help="Start post draw"/>
        <enum name="draw_post" help="Post draw"/>
        <enum name="draw_post_end" help="End post draw"/>
        <enum name="draw_task_added" help="Draw task added"/>

        <!-- Special -->
        <enum name="value_changed" help="Value changed"/>
        <enum name="insert" help="Text inserted"/>
        <enum name="refresh" help="Refresh requested"/>
        <enum name="ready" help="Process finished"/>
        <enum name="cancel" help="Process cancelled"/>

        <!-- Object + children -->
        <enum name="create" help="Object created"/>
        <enum name="delete" help="Object deleted"/>
        <enum name="child_changed" help="Child changed"/>
        <enum name="child_created" help="Child created"/>
        <enum name="child_deleted" help="Child deleted"/>

        <!-- Screen -->
        <enum name="screen_unload_start" help="Screen unload start"/>
        <enum name="screen_load_start" help="Screen load start"/>
        <enum name="screen_loaded" help="Screen loaded"/>
        <enum name="screen_unloaded" help="Screen unloaded"/>

        <!-- Layout + style -->
        <enum name="size_changed" help="Size changed"/>
        <enum name="style_changed" help="Style changed"/>
        <enum name="layout_changed" help="Layout changed"/>
        <enum name="get_self_size" help="Request widget size"/>

        <!-- Display/driver -->
        <enum name="invalidate_area" help="Area invalidated"/>
        <enum name="resolution_changed" help="Resolution changed"/>
        <enum name="color_format_changed" help="Color format changed"/>
        <enum name="refr_request" help="Refresh requested"/>
        <enum name="refr_start" help="Refresh start"/>
        <enum name="refr_ready" help="Refresh done"/>
        <enum name="render_start" help="Render start"/>
        <enum name="render_ready" help="Render done"/>
        <enum name="flush_start" help="Flush start"/>
        <enum name="flush_finish" help="Flush done"/>
        <enum name="flush_wait_start" help="Flush wait start"/>
        <enum name="flush_wait_finish" help="Flush wait done"/>
        <enum name="vsync" help="Vertical sync"/>
    </enumdef>

    <enumdef name="lv_align" help="Object alignment">
        <enum name="default" help="Top-left"/>
        <enum name="top_left" help="Top-left"/>
        <enum name="top_mid" help="Top-center"/>
        <enum name="top_right" help="Top-right"/>
        <enum name="bottom_left" help="Bottom-left"/>
        <enum name="bottom_mid" help="Bottom-center"/>
        <enum name="bottom_right" help="Bottom-right"/>
        <enum name="left_mid" help="Left-center"/>
        <enum name="right_mid" help="Right-center"/>
        <enum name="center" help="Center"/>
    </enumdef>

    <enumdef name="lv_dir" help="Direction flags">
        <enum name="none" help="No direction"/>
        <enum name="top" help="Top"/>
        <enum name="bottom" help="Bottom"/>
        <enum name="left" help="Left"/>
        <enum name="right" help="Right"/>
        <enum name="hor" help="Horizontal (L+R)"/>
        <enum name="ver" help="Vertical (T+B)"/>
        <enum name="all" help="All directions"/>
    </enumdef>

    <enumdef name="lv_layout" help="Layout modes">
        <enum name="none" help="No layout"/>
        <enum name="flex" help="Flexbox layout"/>
        <enum name="grid" help="Grid layout"/>
    </enumdef>

    <enumdef name="lv_flex_flow" help="Flex flow">
        <enum name="row" help="Row"/>
        <enum name="row_wrap" help="Row wrap"/>
        <enum name="row_reverse" help="Row reverse"/>
        <enum name="row_wrap_reverse" help="Row wrap reverse"/>
        <enum name="column" help="Column"/>
        <enum name="column_wrap" help="Column wrap"/>
        <enum name="column_reverse" help="Column reverse"/>
        <enum name="column_wrap_reverse" help="Column wrap reverse"/>
    </enumdef>

    <enumdef name="lv_flex_align" help="Flex alignment">
        <enum name="center" help="Center"/>
        <enum name="start" help="Start"/>
        <enum name="end" help="End"/>
        <enum name="space_around" help="Space around"/>
        <enum name="space_between" help="Space between"/>
        <enum name="space_evenly" help="Space evenly"/>
    </enumdef>

    <enumdef name="lv_grid_align" help="Grid alignment">
        <enum name="center" help="Center of cell"/>
        <enum name="start" help="Start of cell"/>
        <enum name="end" help="End of cell"/>
        <enum name="stretch" help="Stretch to fill"/>
        <enum name="space_around" help="Space around"/>
        <enum name="space_between" help="Space between"/>
        <enum name="space_evenly" help="Space evenly"/>
    </enumdef>

    <enumdef name="lv_text_align" help="Text alignment">
        <enum name="center" help="Center"/>
        <enum name="left" help="Left"/>
        <enum name="right" help="Right"/>
        <enum name="auto" help="Auto (based on dir)"/>
    </enumdef>

    <enumdef name="lv_text_decor" help="Text decoration">
        <enum name="none" help="None"/>
        <enum name="underline" help="Underline"/>
        <enum name="strikethrough" help="Strikethrough"/>
    </enumdef>

    <enumdef name="lv_blend_mode" help="Blend modes">
        <enum name="normal" help="Normal overwrite"/>
        <enum name="additive" help="Add colors"/>
        <enum name="subtractive" help="Subtract colors"/>
        <enum name="multiply" help="Multiply colors"/>
        <enum name="difference" help="Color difference"/>
    </enumdef>

    <enumdef name="lv_base_dir" help="Base text direction">
        <enum name="ltr" help="Left-to-right"/>
        <enum name="rtl" help="Right-to-left"/>
        <enum name="auto" help="Auto detect"/>
    </enumdef>

    <enumdef name="lv_grad_dir" help="Gradient direction">
        <enum name="none" help="No gradient"/>
        <enum name="hor" help="Horizontal"/>
        <enum name="ver" help="Vertical"/>
    </enumdef>

    <enumdef name="lv_border_side" help="Border sides">
        <enum name="none" help="No border"/>
        <enum name="left" help="Left side"/>
        <enum name="right" help="Right side"/>
        <enum name="top" help="Top side"/>
        <enum name="bottom" help="Bottom side"/>
        <enum name="full" help="All sides"/>
    </enumdef>

    <enumdef name="lv_scroll_snap" help="Scroll snapping">
        <enum name="none" help="No snap"/>
        <enum name="start" help="Align to start of the parent"/>
        <enum name="end" help="Align to end of the parent"/>
        <enum name="center" help="Align to center of the parent"/>
    </enumdef>

    <enumdef name="lv_scrollbar_mode" help="How to display scrollbars">
        <enum name="off" help="Never show the scrollbars"/>
        <enum name="on" help="Always show the scrollbars"/>
        <enum name="active" help="Show scrollbars while the widget is being scrolled"/>
        <enum name="auto" help="Show scrollbars when the content is large enough to be scrolled"/>
    </enumdef>

    <enumdef name="lv_screen_load_anim" help="Screen load animations">
        <enum name="none" help="No animation"/>
        <enum name="over_left" help="Slide in from left"/>
        <enum name="over_right" help="Slide in from right"/>
        <enum name="over_top" help="Slide in from top"/>
        <enum name="over_bottom" help="Slide in from bottom"/>
        <enum name="move_left" help="Move out left, new enters"/>
        <enum name="move_right" help="Move out right, new enters"/>
        <enum name="move_top" help="Move out up, new enters"/>
        <enum name="move_bottom" help="Move out down, new enters"/>
        <enum name="fade_in" help="Fade in new"/>
        <enum name="fade_on" help="Fade on top"/>
        <enum name="fade_out" help="Fade out old"/>
        <enum name="out_left" help="Slide out left"/>
        <enum name="out_right" help="Slide out right"/>
        <enum name="out_top" help="Slide out top"/>
        <enum name="out_bottom" help="Slide out bottom"/>
    </enumdef>

    <styledef>
        <!-- Position and size -->
        <prop name="x" type="coords" help="Set X position (px, or %)"/>
        <prop name="y" type="coords" help="Set Y position (px, or %)"/>
        <prop name="height" type="coords" help="Set height (px, %, or content)"/>
        <prop name="min_height" type="coords" help="Set min height (px, %, or content)"/>
        <prop name="max_height" type="coords" help="Set max height (px, %, or content)"/>
        <prop name="width" type="coords" help="Set width (px, %, or content)"/>
        <prop name="min_width" type="coords" help="Set min width (px, %, or content)"/>
        <prop name="max_width" type="coords" help="Set max width (px, %, or content)"/>
        <prop name="length" type="coords" help="Set length (used by some widgets)"/>

        <!-- Padding and margin -->
        <prop name="pad_top" type="int" help="Keep this distance on the top from the content inside"/>
        <prop name="pad_bottom" type="int" help="Keep this distance on the bottom from the content inside"/>
        <prop name="pad_left" type="int" help="Keep this distance on the left from the content inside"/>
        <prop name="pad_right" type="int" help="Keep this distance on the right from the content inside"/>
        <prop name="pad_hor" type="int" help="Set both left and right padding"/>
        <prop name="pad_ver" type="int" help="Set both top and bottom padding"/>
        <prop name="pad_all" type="int" help="Set padding in all 4 directions"/>
        <prop name="pad_row" type="int" help="Set padding between rows of layouts"/>
        <prop name="pad_column" type="int" help="Set padding between columns of layouts"/>
        <prop name="pad_radial" type="int" help="Set radial padding"/>
        <prop name="margin_top" type="int" help="Keep distance above the widget when used in a layout"/>
        <prop name="margin_bottom" type="int" help="Keep distance below the widget when used in a layout"/>
        <prop name="margin_left" type="int" help="Keep distance to the left of the widget when used in a layout"/>
        <prop name="margin_right" type="int" help="Keep distance to the right of the widget when used in a layout"/>
        <prop name="margin_hor" type="int" help="Set both left and right margin"/>
        <prop name="margin_ver" type="int" help="Set both top and bottom margin"/>
        <prop name="margin_all" type="int" help="Set margins in all 4 directions"/>

        <!-- Geometry -->
        <prop name="radius" type="int" help="Set corner radius"/>
        <prop name="radial_offset" type="int" help="Set radial offset (e.g. on ticks of circular scales)"/>
        <prop name="align" type="enum:lv_align" help="Set alignment on the parent"/>
        <prop name="clip_corner" type="bool" help="Enable corner clipping"/>
        <prop name="base_dir" type="enum:lv_base_dir" help="Set base text dir"/>

        <!-- Background -->
        <prop name="bg_color" type="color" help="Set bg color"/>
        <prop name="bg_opa" type="opa" help="Set background opacity"/>
        <prop name="bg_grad_dir" type="enum:lv_grad_dir" help="Set background gradient type"/>
        <prop name="bg_main_stop" type="int" help="Set gradient main stop"/>
        <prop name="bg_grad_stop" type="int" help="Set gradient second stop"/>
        <prop name="bg_grad_color" type="color" help="Set gradient color"/>

        <!-- Background image -->
        <prop name="bg_image_src" type="image" help="Set background image"/>
        <prop name="bg_image_tiled" type="bool" help="Tile background image"/>
        <prop name="bg_image_recolor" type="color" help="Recolor the background image"/>
        <prop name="bg_image_recolor_opa" type="opa" help="Set the recolor intensity"/>

        <!-- Border -->
        <prop name="border_color" type="color" help="Set border color"/>
        <prop name="border_width" type="int" help="Set border width"/>
        <prop name="border_opa" type="opa" help="Set border opacity"/>
        <prop name="border_side" type="enum:lv_border_side" help="Set border sides"/>
        <prop name="border_post" type="bool" help="Draw border after content"/>

        <!-- Outline -->
        <prop name="outline_color" type="color" help="Set outline color"/>
        <prop name="outline_width" type="int" help="Set outline width"/>
        <prop name="outline_opa" type="opa" help="Set outline opacity"/>
        <prop name="outline_pad" type="int" help="Set outline spacing"/>

        <!-- Shadow -->
        <prop name="shadow_width" type="int" help="Set shadow size"/>
        <prop name="shadow_color" type="color" help="Set shadow color"/>
        <prop name="shadow_opa" type="opa" help="Set shadow opacity"/>
        <prop name="shadow_offset_x" type="int" help="Set shadow X offset"/>
        <prop name="shadow_offset_y" type="int" help="Set shadow Y offset"/>
        <prop name="shadow_spread" type="int" help="Assume that the base rectangle is larger by this"/>

        <!-- Text -->
        <prop name="text_color" type="color" help="Set text color"/>
        <prop name="text_opa" type="opa" help="Set text opacity"/>
        <prop name="text_font" type="font" help="Set font"/>
        <prop name="text_align" type="enum:lv_text_align" help="Set text align"/>
        <prop name="text_letter_space" type="int" help="Set letter spacing"/>
        <prop name="text_line_space" type="int" help="Set line spacing"/>
        <prop name="text_decor" type="enum:lv_text_decor" help="Set text decor"/>

        <!-- Image -->
        <prop name="image_opa" type="opa" help="Set image opacity"/>
        <prop name="image_recolor" type="color" help="Recolor image"/>
        <prop name="image_recolor_opa" type="opa" help="Set recolor opacity"/>

        <!-- Line -->
        <prop name="line_width" type="int" help="Set line width"/>
        <prop name="line_color" type="color" help="Set line color"/>
        <prop name="line_opa" type="opa" help="Set line opacity"/>
        <prop name="line_dash_width" type="int" help="Set dash width"/>
        <prop name="line_dash_gap" type="int" help="Set dash gap"/>
        <prop name="line_rounded" type="bool" help="Round line ends"/>

        <!-- Arc -->
        <prop name="arc_width" type="int" help="Set arc width"/>
        <prop name="arc_color" type="color" help="Set arc color"/>
        <prop name="arc_opa" type="opa" help="Set arc opacity"/>
        <prop name="arc_rounded" type="bool" help="Round arc ends"/>
        <prop name="arc_image_src" type="image" help="Set arc image"/>

        <!-- Layout -->
        <prop name="layout" type="enum:lv_layout" help="Set layout type"/>

        <!-- Flex -->
        <prop name="flex_flow" type="enum:lv_flex_flow" help="Set how flex should flow the children (row, column, etc)"/>
        <prop name="flex_main_place" type="enum:lv_flex_align" help="Set main axis align (horizontal with flex_flow=row)"/>
        <prop name="flex_cross_place" type="enum:lv_flex_align" help="Set cross axis align (vertical with flex_flow=row)"/>
        <prop name="flex_track_place" type="enum:lv_flex_align" help="Set track align"/>
        <prop name="flex_grow" type="int" help="Set flex grow to fill the available space in the track"/>

        <!-- Grid -->
        <prop name="grid_column_dsc_array" type="grid_dsc[LV_GRID_TEMPLATE_LAST]" help="Set column descriptor array"/>
        <prop name="grid_row_dsc_array" type="grid_dsc[LV_GRID_TEMPLATE_LAST]" help="Set row descriptor array"/>
        <prop name="grid_column_align" type="enum:lv_grid_align" help="Where to align the columns"/>
        <prop name="grid_row_align" type="enum:lv_grid_align" help="Where to align the rows"/>
        <prop name="grid_cell_column_pos" type="int" help="Set cell's column"/>
        <prop name="grid_cell_column_span" type="int" help="How many columns the cell should span"/>
        <prop name="grid_cell_x_align" type="enum:lv_grid_align" help="How to align the cell horizontally"/>
        <prop name="grid_cell_row_pos" type="int" help="Set cell's row"/>
        <prop name="grid_cell_row_span" type="int" help="How many rows the cell should span"/>
        <prop name="grid_cell_y_align" type="enum:lv_grid_align" help="How to align the cell vertically"/>

        <!-- Misc -->
        <prop name="opa" type="opa" help="Scale down the opacity of the widget and all its children"/>
        <prop name="opa_layered" type="opa" help="Create a snapshot from the widget and blend it with opacity"/>
        <prop name="anim_duration" type="int" help="Set animation duration in ms (e.g. for label scroll)"/>
        <prop name="blend_mode" type="enum:lv_blend_mode" help="Set how to blend colors"/>
        <prop name="transform_width" type="int" help="Change the width without affecting the layouts"/>
        <prop name="transform_height" type="int" help="Change the height without affecting the layouts"/>
        <prop name="translate_x" type="int" help="Offset in X after the layouts are calculated"/>
        <prop name="translate_y" type="int" help="Offset in Y after the layouts are calculated"/>
        <prop name="translate_radial" type="int" help="Translate radial"/>
        <prop name="transform_scale_x" type="int" help="Scale X (256=100%)"/>
        <prop name="transform_scale_y" type="int" help="Scale Y (256=100%)"/>
        <prop name="transform_rotation" type="int" help="Rotate (0.1° units)"/>
        <prop name="transform_pivot_x" type="int" help="Set pivot X"/>
        <prop name="transform_pivot_y" type="int" help="Set pivot Y"/>
        <prop name="transform_skew_x" type="int" help="Skew X (no SW render)"/>
        <prop name="transform_skew_y" type="int" help="Skew Y (no SW render)"/>
        <prop name="bitmap_mask_src" type="image" help="Set bitmap mask (A8 or L8)"/>
        <prop name="rotary_sensitivity" type="int" help="Set rotary sensitivity for Crown input devices"/>
        <prop name="recolor" type="color" help="Mix this color to the widget and all its children"/>
        <prop name="recolor_opa" type="opa" help="The intensity of recoloring"/>
    </styledef>

    </api>
